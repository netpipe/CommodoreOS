; Include the C64 system constants
.include "c64.inc"

.org $0801
    .byte $0c, $08 ; SYS $080C

.org $0803
main:
    ; Clear the screen
    LDA #$00
    STA $0400
    LDA #$12
    STA $D020

    ; Set screen memory address
    LDA #<SCREEN_ADDRESS
    STA $07
    LDA #>SCREEN_ADDRESS
    STA $08

    ; Print "Hello, World!" to the screen
    LDX #0
loop:
    LDA MESSAGE, X
    BEQ done
    STA $0400, X
    INX
    JMP loop
done:
    ; Wait for key press
    JSR $FFE4

    ; Return to BASIC
    RTS

SCREEN_ADDRESS = $0400
MESSAGE:
    .asciiz "Hello, World!"

;
; File generated by cc65 v 2.18 - Ubuntu 2.19-1
;
	.fopt		compiler,"cc65 v 2.18 - Ubuntu 2.19-1"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_printf
	.export		_main

.segment	"RODATA"

L0003:
	.byte	$C8,$45,$4C,$4C,$4F,$2C,$20,$D2,$41,$4D,$44,$49,$53,$4B,$21,$0D
	.byte	$00

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #<(L0003)
	ldx     #>(L0003)
	jsr     pushax
	ldy     #$02
	jsr     _printf
	ldx     #$00
	txa
	rts

.endproc

